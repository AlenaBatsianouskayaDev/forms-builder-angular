{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/38093/Desktop/projects/forms-builder-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { TestBed } from '@angular/core/testing';\nimport { RegistrationFormComponent } from './registration-form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { StoreModule } from '@ngrx/store';\nfdescribe('RegistrationFormComponent', () => {\n  let component;\n  let fixture;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [ReactiveFormsModule, StoreModule.forRoot({})],\n      declarations: [RegistrationFormComponent]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(RegistrationFormComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should create form with 2 controls', () => {\n    expect(component.registrationForm.contains('username')).toBe(true);\n    expect(component.registrationForm.contains('password')).toBe(true);\n  });\n  it('should mark username as invalid if empty value', () => {\n    let control = component.registrationForm.get('username');\n    control === null || control === void 0 ? void 0 : control.setValue('');\n    expect(control === null || control === void 0 ? void 0 : control.valid).toBeFalsy();\n  });\n});","map":{"version":3,"sources":["C:/Users/38093/Desktop/projects/forms-builder-angular/src/app/components/registration-form/registration-form.component.spec.ts"],"names":["TestBed","RegistrationFormComponent","ReactiveFormsModule","StoreModule","fdescribe","component","fixture","beforeEach","configureTestingModule","imports","forRoot","declarations","compileComponents","createComponent","componentInstance","detectChanges","it","expect","toBeTruthy","registrationForm","contains","toBe","control","get","setValue","valid","toBeFalsy"],"mappings":";AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,yBAAT,QAA0C,+BAA1C;AACA,SAASC,mBAAT,QAAoC,gBAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACAC,SAAS,CAAC,2BAAD,EAA8B,MAAM;AACzC,MAAIC,SAAJ;AACA,MAAIC,OAAJ;AACAC,EAAAA,UAAU,iCAAC,aAAY;AACnB,UAAMP,OAAO,CAACQ,sBAAR,CAA+B;AACjCC,MAAAA,OAAO,EAAE,CACLP,mBADK,EAELC,WAAW,CAACO,OAAZ,CAAoB,EAApB,CAFK,CADwB;AAKjCC,MAAAA,YAAY,EAAE,CAACV,yBAAD;AALmB,KAA/B,EAODW,iBAPC,EAAN;AAQH,GATS,EAAV;AAUAL,EAAAA,UAAU,CAAC,MAAM;AACbD,IAAAA,OAAO,GAAGN,OAAO,CAACa,eAAR,CAAwBZ,yBAAxB,CAAV;AACAI,IAAAA,SAAS,GAAGC,OAAO,CAACQ,iBAApB;AACAR,IAAAA,OAAO,CAACS,aAAR;AACH,GAJS,CAAV;AAKAC,EAAAA,EAAE,CAAC,eAAD,EAAkB,MAAM;AACtBC,IAAAA,MAAM,CAACZ,SAAD,CAAN,CAAkBa,UAAlB;AACH,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,oCAAD,EAAuC,MAAM;AAC3CC,IAAAA,MAAM,CAACZ,SAAS,CAACc,gBAAV,CAA2BC,QAA3B,CAAoC,UAApC,CAAD,CAAN,CAAwDC,IAAxD,CAA6D,IAA7D;AACAJ,IAAAA,MAAM,CAACZ,SAAS,CAACc,gBAAV,CAA2BC,QAA3B,CAAoC,UAApC,CAAD,CAAN,CAAwDC,IAAxD,CAA6D,IAA7D;AACH,GAHC,CAAF;AAIAL,EAAAA,EAAE,CAAC,gDAAD,EAAmD,MAAM;AACvD,QAAIM,OAAO,GAAGjB,SAAS,CAACc,gBAAV,CAA2BI,GAA3B,CAA+B,UAA/B,CAAd;AACAD,IAAAA,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACE,QAAR,CAAiB,EAAjB,CAAlD;AACAP,IAAAA,MAAM,CAACK,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACG,KAA3D,CAAN,CAAwEC,SAAxE;AACH,GAJC,CAAF;AAKH,CA9BQ,CAAT","sourcesContent":["import { TestBed } from '@angular/core/testing';\r\nimport { RegistrationFormComponent } from './registration-form.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { StoreModule } from '@ngrx/store';\r\nfdescribe('RegistrationFormComponent', () => {\r\n    let component;\r\n    let fixture;\r\n    beforeEach(async () => {\r\n        await TestBed.configureTestingModule({\r\n            imports: [\r\n                ReactiveFormsModule,\r\n                StoreModule.forRoot({}),\r\n            ],\r\n            declarations: [RegistrationFormComponent]\r\n        })\r\n            .compileComponents();\r\n    });\r\n    beforeEach(() => {\r\n        fixture = TestBed.createComponent(RegistrationFormComponent);\r\n        component = fixture.componentInstance;\r\n        fixture.detectChanges();\r\n    });\r\n    it('should create', () => {\r\n        expect(component).toBeTruthy();\r\n    });\r\n    it('should create form with 2 controls', () => {\r\n        expect(component.registrationForm.contains('username')).toBe(true);\r\n        expect(component.registrationForm.contains('password')).toBe(true);\r\n    });\r\n    it('should mark username as invalid if empty value', () => {\r\n        let control = component.registrationForm.get('username');\r\n        control === null || control === void 0 ? void 0 : control.setValue('');\r\n        expect(control === null || control === void 0 ? void 0 : control.valid).toBeFalsy();\r\n    });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}